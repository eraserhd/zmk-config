#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYMBOL  1
#define MOUSE   2
#define NUMBER  3

&mt {
	flavor = "balanced";
};

&default_transform {
	compatible = "zmk,matrix-transform";
	columns = <12>;
	rows = <4>;
	map = <
	RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)      RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
	RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)      RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
	RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)      RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
			RC(3,3) RC(3,4) RC(3,5) RC(3,2)      RC(3,6) RC(3,7) RC(3,8)
				RC(3,0) RC(3,1)
	>;
};

/ {

#define CAP_Symb  &caps_word_layer SYMBOL 0
#define _D_Numb_  &lt NUMBER D
#define _Z_LCtl_  &mt LCTL Z
#define _X_LAlt_  &mt LALT X
#define _Tab_Cmd  &mt LGUI TAB
#define _Qu_Symb  &lt SYMBOL SINGLE_QUOTE
#define Dot_RAlt  &mt RALT DOT
#define Slsh_Ctl  &mt RCTL SLASH
#define Bspc_Cmd  &mqt RGUI BACKSPACE
#define _Q_Mouse  &lt MOUSE Q

	behaviors {
	    caps_word_layer: caps_word_layer {
		compatible = "zmk,behavior-hold-tap";
		label = "ZM_caps_word_layer";
		#binding-cells = <2>;
		flavor = "balanced";
		tapping-term-ms = <200>;
		bindings = <&mo>, <&caps_word>;
	    };

	    mqt: mod_quick_tap {
		compatible = "zmk,behavior-hold-tap";
		label = "ZM_qt_mt";
		#binding-cells = <2>;
		flavor = "balanced";
		tapping-term-ms = <200>;
		quick-tap-ms = <125>;
		bindings = <&kp>, <&kp>;
	    };
	};

	keymap {
		compatible = "zmk,keymap";
		default_layer {
			bindings = <
/* --------- --------- --------- --------- --------- --------- | --------- --------- --------- --------- --------- --------- */
   &kp MINUS _Q_Mouse  &kp W     &kp E     &kp R     &kp T       &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
   CAP_Symb  &kp A     &kp S     _D_Numb_  &kp F     &kp G       &kp H     &kp J     &kp K     &kp L     &kp SEMI  _Qu_Symb
   &kp LSHFT _Z_LCtl_  _X_LAlt_  &kp C     &kp V     &kp B       &kp N     &kp M     &kp COMMA Dot_RAlt  Slsh_Ctl  &kp RSHFT
/*			       --------- --------- --------- | --------- --------- ---------			       */
			 &trans &kp ENTER  _Tab_Cmd  &kp F9    Bspc_Cmd  &kp SPACE &kp ESC
				      &kp F15   &kp F16
			>;
		};
		symbol_layer {
			bindings = <
/* --------- --------- --------- --------- --------- --------- | --------- --------- --------- --------- --------- --------- */
   &trans    &kp EXCL  &kp TILDE &kp LBRC  &kp RBRC  &kp AMPS    &kp LC(F2) &trans   &trans   &kp LC(F8) &kp PG_UP &trans
   &trans    &kp HASH  &kp GRAVE &kp LPAR  &kp RPAR  &kp DLLR    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &trans    &trans
   &trans    &kp PRCNT &kp CARET &kp LBKT  &kp RBKT  &kp AT      &kp DEL   &kp END   &kp HOME  &kp INS   &kp PG_DN &trans
/*			       --------- --------- --------- | --------- --------- ---------			       */
				 &trans   &none  &trans &trans   &trans    &trans    &trans
				      &trans   &trans
			>;
		};
		mouse_layer {
			bindings = <
/* --------- --------- --------- --------- --------- --------- | --------- --------- --------- --------- ---------   --------- */
   &trans    &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans   &kp C_VOL_UP &trans
   &trans    &trans    &trans    &trans    &trans    &trans      &trans    &trans    &trans    &trans   &trans       &kp C_PLAY_PAUSE
   &trans    &trans    &trans    &trans    &trans    &trans      &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &kp C_VOL_DN &trans
/*			       --------- --------- --------- | --------- --------- ---------			       */
				 &trans  &trans  &trans &trans   &trans    &trans    &bt BT_CLR
				     &trans   &trans
			>;
		};
		number_layer {
			bindings = <
/* --------- --------- --------- --------- --------- --------- | --------- --------- --------- --------- --------- --------- */
   &trans    &trans    &trans    &kp E     &trans    &trans      &kp MINUS &kp N7    &kp N8    &kp N9    &kp STAR  &trans
   &trans    &kp A     &trans    &kp D     &kp F     &trans      &kp PLUS  &kp N4    &kp N5    &kp N6    &kp DOT   &trans
   &trans    &trans    &trans    &kp C     &trans    &kp B       &kp EQUAL &kp N1    &kp N2    &kp N3    &kp SLASH &trans
/*			       --------- --------- --------- | --------- --------- ---------			       */
				&trans  &trans  &trans &trans    &trans    &trans    &kp N0
				     &trans   &trans
			>;
		};
	};
};
